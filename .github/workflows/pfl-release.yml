name: PFL bor create new release

on:
  workflow_dispatch:

env:
    UPSTREAM_PROJECT: Santonclause/tempupstream
    ORIGIN_PROJECT: FastLane-Labs/temp-patch-release
    PATCH_URL: https://raw.githubusercontent.com/FastLane-Labs/sentry-patch/main/announce_only.patch

jobs:
  release-new-bor-version:
    # runs-on: pfl-main-ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

        
      - name: Check upstream releases
        # fetch latest releases from upstream and origin
        # compare releases and set output if there is a new release found
        # fail if releases are the same or error fetching; stop actions
        id: check-upstream-tags
        run: |
          upstream_tag=$(curl -sL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${UPSTREAM_PROJECT}/releases/latest" | jq -r ".tag_name")
          origin_tag=$(curl -sL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${ORIGIN_PROJECT}/releases/latest" | jq -r ".tag_name")
          
          echo "UPSTREAM_TAG=$upstream_tag" >> "$GITHUB_OUTPUT"
          echo "ORIGIN_TAG=$origin_tag" >> "$GITHUB_OUTPUT"
          # fail if any of the tags is null or if the tags are the same
          [[ -z $upstream_tag || -z $origin_tag || $upstream_tag == $origin_tag ]] && { echo "Check if tags are not null or not the same"; exit 1; }
          echo "Upstream: $upstream_tag"
          echo "Origin: $origin_tag"


      - name: Print tags
        if: success()
        run: |
          echo "Upstream: ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}
          echo "Origin: ${{ steps.check-upstream-tags.outputs.ORIGIN_TAG }}

      - name: Apply patch
        run: |
          # ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          git remote add upstream https://github.com/${UPSTREAM_PROJECT}.git 2>/dev/null || :
          git config --global user.name 'GH Actions'
          git config --global user.email 'anton@fastlane.finance'
          git status
          git remote -v
          git fetch upstream --tags
          git checkout ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}
          curl -o pfl.patch ${PATCH_URL}
          # cat pfl.patch
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$ORIGIN_PROJECT.git
          git status
          git remote -v
          #ls -l
          #ls -l eth
          git apply pfl.patch -vvv
          rm -rf pfl.patch
          git add .
          git commit -m "apply fastlane sentry-patch"
          git tag -d ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}
          git tag ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}
          git push origin ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}

      - name: Check version
        run: |
          echo ${{ steps.check-upstream-tags.outputs.UPSTREAM_TAG }}



